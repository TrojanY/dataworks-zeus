<?xml version="1.0" encoding="GBK" ?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
	default-autowire="byName">



	<!--配置hibernate的SessionFactory-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!--注入数据源-->
		<property name="dataSource" ref="dataSource"/>
		<!--hiberate配置信息-->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.jdbc.fetch_size">80</prop>
				<prop key="hibernate.jdbc.batch_size">35</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.connection.autocommit">true</prop>

				<!-- 开启二级缓存 ehcache -->
				<!--<prop key="hibernate.cache.use_second_level_cache">true</prop>-->
				<!--<prop key="hibernate.cache.use_query_cache">true</prop>-->
				<!--<prop key="hibernate.cache.region.factory_class">jcache</prop>-->
                <!--<prop key="hibernate.javax.cache.provider">org.ehcache.jsr107.EhcacheCachingProvider</prop>-->
                <!--<prop key="hibernate.javax.cache.uri">file:/path/to/ehcache.xml</prop>-->
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.taobao.zeus.store.mysql.persistence.JobGroup</value>
				<value>com.taobao.zeus.store.mysql.persistence.JobTaskAction</value>
				<value>com.taobao.zeus.store.mysql.persistence.JobActionBackup</value>
				<value>com.taobao.zeus.store.mysql.persistence.JobTask</value>
				<value>com.taobao.zeus.store.mysql.persistence.DistributeLock</value>
				<value>com.taobao.zeus.store.mysql.persistence.JobTaskHistory</value>
				<value>com.taobao.zeus.store.mysql.persistence.ZeusUser</value>
				<value>com.taobao.zeus.store.mysql.persistence.GroupJobFollow</value>
				<value>com.taobao.zeus.store.mysql.persistence.ZeusPermission</value>
				<value>com.taobao.zeus.store.mysql.persistence.JobFile</value>
				<value>com.taobao.zeus.store.mysql.persistence.JobFileHistory</value>
				<value>com.taobao.zeus.store.mysql.persistence.ZeusProfile</value>
				<value>com.taobao.zeus.store.mysql.persistence.TimeZone</value>
				<value>com.taobao.zeus.store.mysql.persistence.ZeusWorker</value>
				<value>com.taobao.zeus.store.mysql.persistence.ZeusLog</value>
				<value>com.taobao.zeus.store.mysql.persistence.HostGroup</value>
				<value>com.taobao.zeus.store.mysql.persistence.HostRelation</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/zeus?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;autoReconnect=true&amp;autoReconnectForPools=true"/>
		<property name="username" value="root"/>
		<property name="password" value="1qw2azxs"/>
		<property name="maxActive" value="50" />
		<property name="initialSize" value="10" />
		<property name="maxWait" value="60000" />
		<property name="maxIdle" value="30" />
		<property name="minIdle" value="10" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="180" />
        <property name="validationQuery" value="SELECT 1" />
        <property name="testOnBorrow" value="true" />
	</bean>

	<!--配置事务管理器-->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

    <tx:annotation-driven/>
	
</beans>
